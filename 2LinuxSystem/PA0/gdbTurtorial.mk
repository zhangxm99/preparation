# GDB使用教程

首先，使用GDB去调试程序时，必须在编译时指定-ggbd，这会使得在编译时向目标文件中注入相应的调试信息。这会使得在运行程序时记录错误的信息与原因（coredump文件，但必须是root权限才能查看）。

打开系统生成coredump是由ulimit -c unlimited控制的（这只是短暂开启，如果想永久开启需要向/etc/security/limits.conf中写），这样我们就可以分析错误原因了。

我们使用gdb ./a.out ./core进行分析，显示出错误原因和当前帧，使用bt命令可以看出调用栈的层叠关系，使用f n（n是栈的序号）指定进入哪个帧进行分析，使用list可以看这个帧的代码，使用p x（x是变量名）可以打印变量值。

